@{
    ViewData["Title"] = "Dashboard";
}

<div class="row">
    <div class="col-6">
        <div class="card">
            <div id="graficoPromedioDesemepenoSatisfaccion"></div>
        </div>
    </div>
    <div class="col-6">
        <div class="card">
            <div id="graficoPuntajeDesemepenoSatisfaccion"></div>
        </div>
    </div>
    <div class="col-6">
        <div class="card">
            <div id="graficoCantidad"></div>
        </div>
    </div>
    <div class="col-6">
        <div class="card">
            <div id="graficoSalarios"></div>
        </div>
    </div>
    <div class="col-6">
        <div class="card">
            <div id="graficoAnosDeExperiencia"></div>
        </div>
    </div>
    <div class="col-6">
        <div class="card">
            <div id="graficoCantidadContratacion"></div>
        </div>
    </div>
</div>

<style>
    .card {
        padding: 10px;
        margin: 20px;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const departamentos = @Html.Raw(ViewBag.Departamentos);
        const promedioDesempeno = @Html.Raw(ViewBag.PromedioDesempeno);
        const promedioSatisfaccion = @Html.Raw(ViewBag.PromedioSatisfaccion);
        const puntajeDesempeno = @Html.Raw(ViewBag.PuntajeDesempeno);
        const puntajeSatisfaccion = @Html.Raw(ViewBag.PuntajeSatisfaccion);
        const Cantidad = @Html.Raw(ViewBag.CantidadPorDepartamento);
        const Salario = @Html.Raw(ViewBag.Salarios);
        const Anos = @Html.Raw(ViewBag.AnosExperiencia);
        const CantidadContratacion = @Html.Raw(ViewBag.CantidadContratacion);
        const FechaContratacion = @Html.Raw(ViewBag.FechaContratacion);

        

        const configuracionGraficoPromedioDesemepenoSatisfaccion = {
            chart: {
                type: 'radar'
            },
            series: [
                {
                    name: 'Desempeño Promedio',
                    data: promedioDesempeno
                },
                {
                    name: 'Satisfacción Promedio',
                    data: promedioSatisfaccion
                }
            ],
            labels: departamentos,
            title: {
                text: 'Comparación de Desempeño y Satisfacción Promedio por Departamento'
            }
        };

        const graficoPromedioDesemepenoSatisfaccion = new ApexCharts(
            document.getElementById("graficoPromedioDesemepenoSatisfaccion"),
            configuracionGraficoPromedioDesemepenoSatisfaccion
        );
        graficoPromedioDesemepenoSatisfaccion.render();

        const configuracionGraficoPuntajeDesemepenoSatisfaccion = {
            chart: {
                type: 'bar'
            },
            series: [
                {
                    name: 'Desempeño',
                    data: puntajeDesempeno.map(e => e.toFixed(2))
                },
                {
                    name: 'Satisfacción',
                    data: puntajeSatisfaccion.map(e => e.toFixed(2))
                }
            ],
            xaxis: {
                categories: departamentos
            },
            title: {
                text: 'Comparación puntaje de Desempeño y Satisfacción por Departamento'
            }
        };

        const graficoPuntajeDesemepenoSatisfaccion = new ApexCharts(
            document.getElementById('graficoPuntajeDesemepenoSatisfaccion'),
            configuracionGraficoPuntajeDesemepenoSatisfaccion
        );
        graficoPuntajeDesemepenoSatisfaccion.render();

        const data = Cantidad.map(item => {
            return {
                x: item.Departamento,
                y: item.CantidadEmpleados
            };
        });
        const configuracionGraficoCantidad = {
            series: [
                {
                    data:data
                }
            ],
            legend: {
                show: false
            },
            chart: {
                height: 350,
                type: 'treemap'
            },
            title: {
                text: 'Cantidad por Departamento'
            }
        };
        const graficoCantidad = new ApexCharts(
            document.getElementById('graficoCantidad'), 
            configuracionGraficoCantidad
        );
        graficoCantidad.render();

        const configuracionGraficoSalario = {
            chart: {
                type: 'pie'
            },
            series: Salario,
            labels: departamentos,
            title: {
                text: 'Tasa de Salarios Por Departamento'
            }
        };
        const graficoSalario = new ApexCharts(
            document.getElementById('graficoSalarios'),
            configuracionGraficoSalario
        );
        graficoSalario.render();

        const configuracionGraficoAnosExperiencia = {
            chart: {
                type: 'bar'
            },
            series: [
                {
                    name: 'Años de Experiencia',
                    data: Anos.map(e => e.toFixed(0))
                }
            ],
            xaxis: {
                categories: departamentos
            },
            title: {
                text: 'Nivel de Experiencia Experiencia por Departamento'
            }
        }

        const graficoAnosExperiencia = new ApexCharts(
            document.getElementById('graficoAnosDeExperiencia'),
            configuracionGraficoAnosExperiencia
        );
        graficoAnosExperiencia.render();

        const configuracionGraficoContratacion = {
            chart: {
                type: 'line'
            },
            series: [
                {
                    name: 'Personas Contratadas',
                    data: CantidadContratacion
                }
            ],
            xaxis: {
                categories: FechaContratacion
            },
            title: {
                text: 'Cantidad de contratacion por Año'
            }
        }

        const graficoContratacion = new ApexCharts(
            document.getElementById('graficoCantidadContratacion'),
            configuracionGraficoContratacion
        );
        graficoContratacion.render();
    });
</script>